services:
    redis:
        image: redis
        restart: always
        container_name: redis
        volumes:
            - redis:/data
        networks:
            - pindb-network
    django:
        build:
            context: ./back
            target: dev
            dockerfile: Dockerfile
        depends_on:
            - redis
        volumes:
            - "./back:/app"
        env_file:
            - .env
        networks:
            - pindb-network
    celery:
        build:
            context: ./back
            target: dev
            dockerfile: Dockerfile
        container_name: django_celery
        command: celery -A db_lk worker --loglevel=info
        volumes:
            - "./back:/app"
        env_file:
            - .env
        depends_on:
            - django
            - redis
        networks:
            - pindb-network
    exporter:
        build:
            context: ./google_sheets
        container_name: google_sheets
        command: python scheduler.py
        volumes:
            - ./google_sheets:/app
        env_file:
            - .env
        depends_on:
            - redis
            - celery
        networks:
            - pindb-network
    react:
        build:
            context: ./front
            dockerfile: Dockerfile
        volumes:
            - "./front:/app"
            - /app/node_modules
        networks:
            - pindb-network
        depends_on:
            - django
    nginx:
        image: nginx
        container_name: fpin-nginx
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        networks:
            - pindb-network
        restart: always
        depends_on:
            - react
            - django
        ports:
            - "55001:80"
    telegram:
        build:
            context: ./telegram
            dockerfile: Dockerfile
        container_name: fpin-tgbot
        command: python main.py --bot
        networks:
            - pindb-network
        env_file:
            - .env
    telegram-web:
        build:
            context: ./telegram
            dockerfile: Dockerfile
        container_name: fpin-tgbot-web
        command: python main.py --web
        ports:
            - "8000"
        networks:
            - pindb-network
        env_file:
            - .env
networks:
    pindb-network:
volumes:
    redis:
